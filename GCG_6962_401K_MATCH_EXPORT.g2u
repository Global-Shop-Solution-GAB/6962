Program.Sub.ScreenSU.Start
Gui.DateSelect..Create(BaseForm)
Gui.DateSelect..Caption("401k Matching")
Gui.DateSelect..Size(282,135)
Gui.DateSelect..MinX(0)
Gui.DateSelect..MinY(0)
Gui.DateSelect..Position(0,0)
Gui.DateSelect..AlwaysOnTop(False)
Gui.DateSelect..FontName("Tahoma")
Gui.DateSelect..FontSize(8.25)
Gui.DateSelect..ControlBox(True)
Gui.DateSelect..MaxButton(True)
Gui.DateSelect..MinButton(True)
Gui.DateSelect..MousePointer(0)
Gui.DateSelect..Moveable(True)
Gui.DateSelect..Sizeable(True)
Gui.DateSelect..ShowInTaskBar(True)
Gui.DateSelect..TitleBar(True)
Gui.DateSelect..Event(UnLoad,DateSelect_UnLoad)
Gui.DateSelect.dtpStart.Create(DatePicker)
Gui.DateSelect.dtpStart.Enabled(True)
Gui.DateSelect.dtpStart.Visible(True)
Gui.DateSelect.dtpStart.Zorder(0)
Gui.DateSelect.dtpStart.Size(105,20)
Gui.DateSelect.dtpStart.Position(18,34)
Gui.DateSelect.dtpStart.CheckBox(False)
Gui.DateSelect.dtpStart.FontName("Tahoma")
Gui.DateSelect.dtpStart.FontSize(8.25)
Gui.DateSelect.dtpEnd.Create(DatePicker)
Gui.DateSelect.dtpEnd.Enabled(True)
Gui.DateSelect.dtpEnd.Visible(True)
Gui.DateSelect.dtpEnd.Zorder(0)
Gui.DateSelect.dtpEnd.Size(105,20)
Gui.DateSelect.dtpEnd.Position(129,34)
Gui.DateSelect.dtpEnd.CheckBox(False)
Gui.DateSelect.dtpEnd.FontName("Tahoma")
Gui.DateSelect.dtpEnd.FontSize(8.25)
Gui.DateSelect.lblStart.Create(Label,"Start Date:",True,54,13,0,19,16,True,0,"Tahoma",8.25,,0,0)
Gui.DateSelect.lblStart.BorderStyle(0)
Gui.DateSelect.lblEnd.Create(Label,"End Date:",True,48,13,0,130,16,True,0,"Tahoma",8.25,,0,0)
Gui.DateSelect.lblEnd.BorderStyle(0)
Gui.DateSelect.cmdPrint.Create(Button)
Gui.DateSelect.cmdPrint.Enabled(True)
Gui.DateSelect.cmdPrint.Visible(True)
Gui.DateSelect.cmdPrint.Zorder(0)
Gui.DateSelect.cmdPrint.Size(75,23)
Gui.DateSelect.cmdPrint.Position(18,67)
Gui.DateSelect.cmdPrint.Caption("PRINT")
Gui.DateSelect.cmdPrint.FontName("Tahoma")
Gui.DateSelect.cmdPrint.FontSize(8.25)
Gui.DateSelect.cmdPrint.Event(Click,cmdPrint_Click)
Gui.FormData..Create(BaseForm)
Gui.FormData..Caption("Export")
Gui.FormData..Size(1433,423)
Gui.FormData..MinX(0)
Gui.FormData..MinY(0)
Gui.FormData..Position(0,0)
Gui.FormData..AlwaysOnTop(False)
Gui.FormData..FontName("Tahoma")
Gui.FormData..FontSize(8.25)
Gui.FormData..ControlBox(True)
Gui.FormData..MaxButton(True)
Gui.FormData..MinButton(True)
Gui.FormData..MousePointer(0)
Gui.FormData..Moveable(True)
Gui.FormData..Sizeable(True)
Gui.FormData..ShowInTaskBar(True)
Gui.FormData..TitleBar(True)
Gui.FormData.GSGC_Data.Create(GsGridControl)
Gui.FormData.GSGC_Data.Enabled(True)
Gui.FormData.GSGC_Data.Visible(True)
Gui.FormData.GSGC_Data.Zorder(0)
Gui.FormData.GSGC_Data.Size(1424,384)
Gui.FormData.GSGC_Data.Position(5,5)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Program.Sub.Preflight.End

Program.Sub.Main.Start
'Author: Angel Tudon
'Customer: Hy-Dac Rubber Mfg.
'Ticket: https://www.gss-service.com/Calls/CallEditInternalOpen/1317950
'Quote: 13701 - 0
'Project allows for the selectiong of a pay date range to generate an excel spreasheet in accordance with the customer's third party payroll site. This will provide them with a report ready for submission to the site when needed. 

Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout

'Open ODBC connection and show date range selection screen
F.ODBC.Connection!con.OpenCompanyConnection(100)
GUI.DateSelect..Show

Program.Sub.Main.End

Program.Sub.cmdPrint_Click.Start
F.Intrinsic.Control.Try

V.Local.sName.Declare(String)
V.Local.sLeft.Declare(String)
V.Local.sMid.Declare(String)
V.Local.sRight.Declare(String)
V.Local.iCount.Declare(Long)
V.Local.sRet.Declare(String)
V.Local.baSocial.Declare(ByteArray)
V.Local.dStart.Declare(String)
V.Local.dEnd.Declare(String)
V.Local.sSql.Declare(String)
V.Local.sLastName.Declare(String)
V.Local.iArraySize.Declare(Long)
V.Local.dStart.Set(V.Screen.DateSelect!dtpStart.Value)
V.Local.dEnd.Set(V.Screen.DateSelect!dtpEnd.Value)

F.Intrinsic.Control.If(V.DataTable.dtData.Exists)
	F.Data.Datatable.Close("dtData")
F.Intrinsic.Control.EndIf

'Build query and load datatable
F.Intrinsic.String.Build("Select RTRIM(A.EMPLOYEE) EMPLOYEE, RTRIM(D.NAME) NAME, D.SOC_SEC_ENC, RTRIM(D.SEX) GENDER, RTRIM(D.ADDRESS) STREET1, RTRIM(D.COMMENTS_1) STREET2, RTRIM(D.CITY) CITY, RTRIM(D.STATE) STATE, RTRIM(D.ZIP_CODE) ZIP, D.BIRTHDATE, D.DATE_HIRE, D.DATE_TERMINATION as DATE_TERM1, SUM (A.HOURS_R_1) HR1, SUM(A.HOURS_O_1) OTHRS1, SUM(A.HOURS_D_1) DHOURS1, SUM(A.HOURS_R_2) HR2, SUM(A.HOURS_O_2) OTHRS2, SUM(A.HOURS_D_2) DHOURS2, SUM(A.HOURS_R_3) HR3, SUM(A.HOURS_O_3) OTHRS3, SUM(A.HOURS_D_3) DHOURS3,  SUM(A.REG_DOLLARS_1) DLR1, SUM(A.OT_DOLLARS_1) OT1, SUM(A.DBL_DOLLARS_1) DBL_DLR1, SUM(A.REG_DOLLARS_2) DLR2, SUM(A.OT_DOLLARS_2) OT2, SUM(A.DBL_DOLLARS_2) DBL_DLR2, SUM(A.REG_DOLLARS_3) DLR3, SUM(A.OT_DOLLARS_3) OT3, SUM(A.DBL_DOLLARS_3) DBL_DLR3 from V_PAY_HIST_EARN A left join V_EMPLOYEE_MSTR D on A.EMPLOYEE = D.EMPLOYEE where A.EARNINGS IN (01, 02, 03, 04, 05, 06, 07) and A.DATE_CHECK >= '{0}' and A.DATE_CHECK <= '{1}'group by EMPLOYEE, NAME, SOC_SEC_ENC, SEX, ADDRESS, COMMENTS_1, CITY, STATE, ZIP_CODE, BIRTHDATE", V.Local.dStart.PervasiveDate, V.Local.dEnd.PervasiveDate, V.Local.sSql)
F.Data.Datatable.CreateFromSQL("dtData", "con", V.Local.sSql, True)
F.Data.Datatable.SetPK("dtData", "EMPLOYEE")

'Add expressions columns to sum all dollars and hours
F.Data.Datatable.AddExpressionColumn("dtData", "GROSS_PAY", "String", "DLR1 + OT1 + DBL_DLR1 + DLR2 + OT2 + DBL_DLR2 + DLR3 + OT3 + DBL_DLR3")
F.Data.Datatable.AddExpressionColumn("dtData", "HOURS_PAID", "String", "HR1 + OTHRS1 + DHOURS1 + HR2 + OTHRS2 + DHOURS2 + HR3 + OTHRS3 + DHOURS3")
'Add expression column to capture decrypted SSNs
F.Data.Datatable.AddColumn("dtData", "SSN", "String")
'Add Columns to capture First, M, and Last names
F.Data.Datatable.AddColumn("dtData", "FIRST_NAME", "String")
F.Data.Datatable.AddColumn("dtData", "MI", "String")
F.Data.Datatable.AddColumn("dtData", "LAST_NAME", "String")
'Add column to capture termination date and show blank if date is 1/1/1900
F.Data.DataTable.AddExpressionColumn("dtData", "DATE_TERMINATION", "String", "IIF([DATE_TERM1] = '1/1/1900', '', [DATE_TERM1])")

'Loop datatable to decrypt SSNs
F.Intrinsic.Control.For(V.Local.iCount, 0, V.DataTable.dtData.RowCount--, 1)
	
	'Decrypt SSN
	V.Local.baSocial.Set(V.DataTable.dtData(V.Local.iCount).SOC_SEC_ENC!FieldVal)
	F.Global.Encryption.Decrypt(V.Local.baSocial, V.Local.sRet)
	
	'Break up decrypted social to add '-' between the numbers then set social to table
	F.Intrinsic.String.Left(V.Local.sRet, 3, V.Local.sLeft)
	F.Intrinsic.String.Mid(V.Local.sRet, 4, 2, V.Local.sMid)
	F.Intrinsic.String.Mid(V.Local.sRet, 6, 4, V.Local.sRight)
	F.Intrinsic.String.Build("{0}-{1}-{2}", V.Local.sLeft, V.Local.sMid, V.Local.sRight, V.Local.sRet)
	
	F.Data.Datatable.SetValue("dtData", V.Local.iCount, "SSN", V.Local.sRet)
	
	'Split Names on spaces to break into First, M, and Last Names
	'Mary Kay Myers Junior
	F.Intrinsic.String.Split(V.DataTable.dtData(V.Local.iCount).NAME!FieldValTrim, " ", V.Local.sName)
	V.Local.iArraySize.Set(V.Local.sName.UBound)
	F.Intrinsic.Math.Add(V.Local.iArraySize, 1, V.Local.iArraySize)
	
	F.Intrinsic.Control.If(V.Local.iArraySize, =, 2)
		F.Data.Datatable.SetValue("dtData", V.Local.iCount, "FIRST_NAME", V.Local.sName(0))
		F.Data.Datatable.SetValue("dtData", V.Local.iCount, "LAST_NAME", V.Local.sName(1))
		
	F.Intrinsic.Control.ElseIf(V.Local.iArraySize, =, 3)
		'Check for Junior being used in name and split accordingly
		F.Intrinsic.Control.If(V.Local.sName.UCase(2), =, "JUNIOR", OR, V.Local.sName.UCase(2), =, "JR.", V.Local.sName.UCase(2), =, "JR")
			F.Data.Datatable.SetValue("dtData", V.Local.iCount, "FIRST_NAME", V.Local.sName(0))
			F.Intrinsic.String.Build("{0} {1}", V.Local.sName(1), V.Local.sName(2), V.Local.sLastName)
			F.Data.Datatable.SetValue("dtData", V.Local.iCount, "LAST_NAME", V.Local.sLastName)
			
		F.Intrinsic.Control.Else
			F.Data.Datatable.SetValue("dtData", V.Local.iCount, "FIRST_NAME", V.Local.sName(0))
			F.Data.Datatable.SetValue("dtData", V.Local.iCount, "MI", V.Local.sName(1))
			F.Data.Datatable.SetValue("dtData", V.Local.iCount, "LAST_NAME", V.Local.sName(2))
		
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.ElseIf(V.Local.iArraySize, =, 4)
		F.Data.Datatable.SetValue("dtData", V.Local.iCount, "FIRST_NAME", V.Local.sName(0))
		F.Data.Datatable.SetValue("dtData", V.Local.iCount, "MI", V.Local.sName(1))
		F.Intrinsic.String.Build("{0} {1}", V.Local.sName(2), V.Local.sName(3), V.Local.sLastName)
		F.Data.Datatable.SetValue("dtData", V.Local.iCount, "LAST_NAME", V.Local.sLastName)

	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Next(V.Local.iCount)

F.Intrinsic.Control.If(V.DataTable.dtContributions.Exists)
	F.Data.Datatable.Close("dtContributions")
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("Select A.EMPLOYEE, SUM(A.IRA_AMOUNT) CONTRIBUTION, SUM(ISNULL(B.COMPANY_AMT, 0)) EMPLOYER_MATCH, SUM(A.DEDUCT_12) ROTH from V_PAY_HIST_DED A left join V_PAYROLL_401K B on A.EMPLOYEE = B.EMPLOYEE and A.CHECK_DATE = B.DATE_MATCH and A.CHECK_NUMBER = B.CHECK_NUM where A.CHECK_DATE >= '{0}' and A.CHECK_DATE <= '{1}' group by A.EMPLOYEE", V.Local.dStart.PervasiveDate, v.Local.dEnd.PervasiveDate, V.Local.sSql)
F.Data.Datatable.CreateFromSQL("dtContributions", "con", V.Local.sSql)
F.Data.Datatable.SetPK("dtContributions", "EMPLOYEE")

F.Data.Datatable.Merge("dtContributions", "dtData", False, 4)

F.Intrinsic.Control.CallSub(FormatToGridView)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine)
F.Intrinsic.Control.EndTry
Program.Sub.cmdPrint_Click.End

Program.Sub.FormatToGridView.Start
F.Intrinsic.Control.Try

'Create gridvew from datatable
GUI.FormData.GSGC_Data.AddGridviewFromDatatable("gvData", "dtData")

'Set gridvew properties
GUI.FormData.GSGC_Data.SetGridViewProperty("gvData", V.Enum.GridViewPropertyNames!SuppressNothingDates, True)

'Set column captions
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "FIRST_NAME", "Caption", "First Name")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "MI", "Caption", "MI")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "LAST_NAME", "Caption", "Last Name")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "SSN", "Caption", "SSN")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "GENDER", "Caption", "Gender")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "STREET1", "Caption", "Street 1")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "STREET2", "Caption", "Street 2")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "CITY", "Caption", "City")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "STATE", "Caption", "State")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "ZIP", "Caption", "ZIP")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "BIRTHDATE", "Caption", "Birth Date")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DATE_HIRE", "Caption", "Hire Date")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DATE_TERMINATION", "Caption", "Release Date")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "GROSS_PAY", "Caption", "Gross Pay")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "HOURS_PAID", "Caption", "Hours Paid")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "CONTRIBUTION", "Caption", "Contribution")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "EMPLOYER_MATCH", "Caption", "Employer Match")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "ROTH", "Caption", "Roth")

'Set bold headers
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "FIRST_NAME", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "MI", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "LAST_NAME", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "SSN", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "GENDER", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "STREET1", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "STREET2", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "CITY", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "STATE", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "ZIP", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "BIRTHDATE", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DATE_HIRE", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DATE_TERMINATION", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "GROSS_PAY", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "HOURS_PAID", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "CONTRIBUTION", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "EMPLOYER_MATCH", "HeaderFontBold", True)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "ROTH", "HeaderFontBold", True)

'Hide uneeded columns
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "EMPLOYEE", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "HR1", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "OTHRS1", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DHOURS1", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "HR2", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "OTHRS2", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DHOURS2", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "HR3", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "OTHRS3", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DHOURS3", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DLR1", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "OT1", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DBL_DLR1", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DLR2", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "OT2", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DBL_DLR2", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DLR3", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "OT3", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DBL_DLR3", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "SOC_SEC_ENC", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "NAME", "Visible", False)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DATE_TERM1", "Visible", False)

'Set numeric format
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "GROSS_PAY", "DisplayCustomNumeric","#,###,###,##0.00")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "HOURS_PAID", "DisplayCustomNumeric","#,###,###,##0.00")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "CONTRIBUTION", "DisplayCustomNumeric","#,###,###,##0.00")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "EMPLOYER_MATCH", "DisplayCustomNumeric","#,###,###,##0.00")
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "ROTH", "DisplayCustomNumeric","#,###,###,##0.00")


'Set visible index order
V.Local.iVisibleIndex.Declare(Long)
V.Local.iVisibleIndex.Set(-1)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "FIRST_NAME", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "MI", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "LAST_NAME", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "SSN", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "GENDER", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "STREET1", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "STREET2", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "CITY", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "STATE", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "ZIP", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "BIRTHDATE", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DATE_HIRE", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "DATE_TERMINATION", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "GROSS_PAY", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "HOURS_PAID", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "CONTRIBUTION", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "EMPLOYER_MATCH", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)
GUI.FormData.GSGC_Data.SetColumnProperty("gvData", "ROTH", V.Enum.ColumnPropertyNames!VisibleIndex, V.Local.iVisibleIndex.++)

GUI.FormData.GSGC_Data.MainView("gvData")

F.Intrinsic.Control.CallSub(ExportGrid)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine)
F.Intrinsic.Control.EndTry
Program.Sub.FormatToGridView.End

Program.Sub.ExportGrid.Start
F.Intrinsic.Control.Try

V.Local.sFilePath.Declare(String)
V.Local.sFileName.Declare(String)
V.Local.sTimeStamp.Declare(String)
V.Local.sFileExport.Declare(String)

'Capure export location
F.Intrinsic.UI.FolderBrowser("Select export location:", V.Local.sFilePath)

'Exit sub if no file path is selected
F.Intrinsic.Control.If(V.Local.sFilePath, =, "***CANCEL***")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'Generate file name
F.Intrinsic.String.Build("401K_Mattching_{0}.xlsx", V.Ambient.Now, V.Local.sFileName)
F.Intrinsic.File.MakeFileNameFriendly(V.Local.sFileName, V.Local.sFileName)

'Build final file export path-name and export
F.Intrinsic.String.Build("{0}\{1}", V.Local.sFilePath, V.Local.sFileName, V.Local.sFileExport)
GUI.FormData.GSGC_Data.Export(V.Local.sFileExport, "xlsx")
'Automatically opened export file
F.Intrinsic.Task.ShellExec(0, "", V.Local.sFileExport, "", "", 1)

F.Intrinsic.Control.CallSub(DateSelect_Unload)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine)
F.Intrinsic.Control.EndTry
Program.Sub.ExportGrid.End

Program.Sub.DateSelect_UnLoad.Start
F.Intrinsic.Control.If(V.ODBC.Con.Exists)
	F.ODBC.Connection!con.Close
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End
Program.Sub.DateSelect_UnLoad.End

Program.Sub.ErrorMessage.Start
F.Intrinsic.Control.Try

V.Local.iError.Declare(Long)
V.Local.sErrorDescription.Declare(String)
V.Local.sSubroutine.Declare(String)
V.Local.sError.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sCallback.Declare(String)
V.Static.bError.Declare(Boolean, False)

V.Local.iError.Set(V.Args.ErrorNumber)
V.Local.sErrorDescription.Set(V.Args.ErrorDescription)
V.Local.sSubroutine.Set(V.Args.Subroutine)

'make sure we aren't in an error loop
F.Intrinsic.Control.If(V.Static.bError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndIf
V.Static.bError.Set(True)

F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Local.sSubroutine, V.Local.iError, V.Local.sErrorDescription, V.Ambient.GABVersion, V.Local.sError)
F.Intrinsic.UI.Msgbox(V.Local.sError)
	
F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine)
F.Intrinsic.Control.EndTry
Program.Sub.ErrorMessage.End

Program.Sub.Comments.Start
${$5$}$20.1.8328.25015$}$1
${$6$}$atudon$}$20221121141641648$}$wHlNQNSPD/BybNtaCJPwGHNwUyiDpx8wOKWkUyVUEcIxAT+p8p+gx9NLUKw1SSplfvBFbfEzev4=
Program.Sub.Comments.End